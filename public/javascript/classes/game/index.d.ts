import Cactus from '../cactus';
import Canvas from '../canvas';
import Cloud from '../cloud';
import Dinosaur from '../dinosaur';
import Entity from '../entity';
import Ground from '../ground';
import Mountain from '../mountain';
import type { State } from './types';
export default class Game {
    private _fps;
    private _last;
    private _lastUpdate;
    private _canvas;
    private _acceleration;
    private _velocity;
    private _gravity;
    private _friction;
    private _state;
    private _cactus;
    private _clouds;
    private _dinosaurs;
    private _grounds;
    private _mountains;
    private _events;
    constructor();
    get velocity(): number;
    protected set velocity(value: number);
    get canvas(): Canvas;
    get cactus(): Cactus[];
    get clouds(): Cloud[];
    get dinosaurs(): Dinosaur[];
    get grounds(): Ground[];
    get mountains(): Mountain[];
    get events(): {
        onkeypress?: (game: Game, event: KeyboardEvent) => void;
        onstart?: (game: Game) => void;
        onstop?: (game: Game) => void;
        ongameover?: (game: Game) => void;
    };
    protected set events(value: {
        onkeypress?: (game: Game, event: KeyboardEvent) => void;
        onstart?: (game: Game) => void;
        onstop?: (game: Game) => void;
        ongameover?: (game: Game) => void;
    });
    get fps(): number;
    protected set fps(value: number);
    get state(): State;
    private set state(value);
    gameOver(): void;
    pause(): void;
    start(force?: boolean): void;
    stop(): void;
    addEntity(value: Entity | Entity[]): void;
    draw(): void;
    gravity(): void;
    parallax(): void;
    repostion(): void;
    preload(): void;
    render(): void;
    private collision;
    private listen;
}
